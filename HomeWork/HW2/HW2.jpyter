import urllib.request
import json

def get_user(users_list):
    ''' Получает имя пользователя '''
    while True: # работает пока пользователь не введет верное имя
        print("Список пользователей:", ', '.join(users_list))
        user = input('Введите имя пользователя из списка:')
        if user not in users_list:
            print('\nЭто должен быть пользователь из списка!\n')
            continue
        else:
            break
    return user

def get_data(user):
    ''' Получает всю информацию о пользователе '''
    token = '95624649f76da7e8c20a0b0f569a3fdf2107f1c1'
    url = 'https://api.github.com/users/%s/repos?access_token=%s' % (user, token)
    response = urllib.request.urlopen(url)
    text = response.read().decode('utf-8')
    data = json.loads(text)
    return data

def user_repos(data):
    '''Создает словарь с названиями репозиториев и их описаниями'''
    dict_repo = {}
    for i in data:
        dict_repo[i["name"]] = i["description"]
    print('Вот список репозиториев пользователя с их описанием:')
    for key, value in dict_repo.items():
        if not value:
            print(key)
        else:
            print(key, ':', value)
    return dict_repo

def user_languages(data):
    '''Создает словарь, где ключи, язык программирования, а значения - репо, в которых он используется'''
    dict_languages = {}
    for i in data:
        if  i["language"] not in dict_languages:
            dict_languages[i["language"]] = i["name"]
        else:
            dict_languages[i["language"]] += ', ' + i["name"]

    print ('Пользователь пишет на', ', '.join('%s' % (k) for k in dict_languages.keys())) # печатает все ключи из словаря, которые являются языками

    for key, value in dict_languages.items():
        print('Язык', key, 'используется в ', value) # Печатает языки и репозитории, в которых он используется

    return dict_languages

def pop_repo_lang(users_list):
    data_dict = {} # Словарь, в котором пользователи - ключи, вся информация о них - значения
    users_repo = {} # Словарь с информацией о пользователях и кол-ве их репозиториев
    users_lang = {} # Частотный словарь языков программирования
    for user in users_list:
        user_data = get_data(user)
        data_dict[user] = user_data
        for i in user_data:
            len_repo = len(user_data)
            users_repo[user] = len_repo # Создает словарь с кол-вом репозиториев
            if i["language"] not in users_lang: # Создает частотный словарь языков
                users_lang[i["language"]] = 1
            else:
                users_lang[i["language"]] += 1

    max_repo = max(users_repo, key=lambda k: users_repo[k]) # Выбирает пользователя с наибольшим числом репозиториев
    print('Из списка', ', '.join(users_list), 'больше всего репозиториев у пользователя ', max_repo)

    popular_lang = max(users_lang, key=lambda k: users_lang[k]) # Выбирает самый частотный язык
    print('Самый популярный язык среди пользователей списка', ', '.join(users_list), '--', popular_lang)

def amount_followers(users_list):
    followers = {}
    for user in users_list:
        url = 'https://api.github.com/users/%s/followers'  % (user)
        response = urllib.request.urlopen(url)
        text = response.read().decode('utf-8')
        data = json.loads(text)
        followers[user] = len(data)
    most_popular = max(followers, key=lambda k: followers[k])
    print('Больше всего подписчиков у пользователя', most_popular)

def main():
    users_list = ['elmiram', 'maryszmary', 'lizaku', 'nevmenandr', 'ancatmara', 'roctbb', 'akutuzov', 'agricolamz', 'lehkost', 'kylepjohnson', 'mikekestemont', 'demidovakatya', 'shwars', 'JelteF', 'timgraham', 'arogozhnikov', 'jasny', 'bcongdon', 'whyisjake', 'gvanrossum', 'Gratisfo']
    user = get_user(users_list)
    data = get_data(user)
    repos = user_repos(data)
    languages = user_languages(data)
    popular = pop_repo_lang(users_list)
    popular_user = amount_followers(users_list)




if __name__ == '__main__':
    main()
